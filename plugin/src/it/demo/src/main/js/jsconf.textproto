# Copyright 2014 The Closure Compiler Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file contains example JS conformance configurations for various problems
# with JavaScript. Since each project may want to opt-in to different rules, and
# each project may need its own specific whitelist, the examples in this file
# are meant to be copied to a project specific conformance_proto.textproto file.

requirement: {
  type: BANNED_NAME
  error_message: 'eval is not allowed since it can be used to execute '
                 'arbitrary JavaScript code. It is not typically necessary '
                 'in ordinary programming.'

  value: 'eval'

  whitelist: 'target/dep/main/js/goog/base.js'
  whitelist: 'target/dep/main/js/goog/json/json.js'
}

requirement: {
  type: BANNED_PROPERTY
  error_message: 'Arguments.prototype.callee is not allowed in ES5 Strict mode.'
                 'The JavaScript compiler will also check this when '
                 'CHECK_ES5_STRICT is enabled, but this conformance check also '
                 'warns for possible violations.'

  value: 'Arguments.prototype.callee'

  whitelist: 'target/dep/main/js/goog/base.js'  # goog.base uses arguments.callee
  whitelist: 'target/dep/main/js/goog/debug/'  # legacy stack trace support, etc
}

requirement: {
  type: BANNED_PROPERTY_WRITE
  error_message: 'Assignment to Element.prototype.innerHTML is not allowed '
                 'since passing unsafe content can cause XSS vulnerabilities.'
                 'Use goog.dom.safe.setInnerHtml instead.'

  value: 'Element.prototype.innerHTML'

  # Safe wrapper for this property.
  whitelist: 'target/dep/main/js/goog/dom/safe.js'

  # Safely used in goog.string.unescapeEntitiesUsingDom_; the string assigned to
  # innerHTML is a single HTML entity.
  whitelist: 'target/dep/main/js/goog/string/string.js'

  # The sanitizer has been vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/sanitizer/htmlsanitizer.js'

  # Vetted by ISE.
  # All assignments first check that the template is strict and has type HTML.
  whitelist: 'target/dep/main/js/goog/soy/soy.js'

  # Content comes from a safe stylesheet which is checked at runtime.
  whitelist: 'target/dep/main/js/goog/style/style.js'
}

requirement: {
  type: BANNED_PROPERTY_WRITE
  error_message: 'Assignment to Element.prototype.outerHTML is not allowed '
                 'since passing unsafe content can cause XSS vulnerabilities.'
                 'Use goog.dom.safe.setOuterHtml instead.'

  value: 'Element.prototype.outerHTML'

  # Safe wrapper for this property.
  whitelist: 'target/dep/main/js/goog/dom/safe.js'
}

requirement: {
  type: BANNED_PROPERTY_WRITE
  error_message: 'Assignment to Location.prototype.href is not allowed. '
                 'Externally controlled content assigned to the href property '
                 'can cause XSS vulnerabilities, such as executing '
                 'javascript:evil() URLs. Use goog.dom.safe.setLocationHref '
                 'instead.'

  value: 'Location.prototype.href'

  # Safe wrapper for this property.
  whitelist: 'target/dep/main/js/goog/dom/safe.js'
}

requirement: {
  type: BANNED_PROPERTY_WRITE
  error_message: 'Assignment to Window.prototype.location is not allowed.'
                 'Externally controlled content assigned to the location '
                 'object can cause XSS vulnerabilities, such as executing '
                 'javascript:evil() URLs. Use goog.dom.safe.setLocationHref '
                 'instead.'

  value: 'Window.prototype.location'
}

requirement: {
  type: BANNED_PROPERTY_WRITE
  error_message: 'Assignment to .href property of Anchor, Link, etc elements, '
                 'is not allowed.  Externally controlled content assigned '
                 'to the href property can cause XSS vulnerabilities, such as '
                 'executing javascript:evil() URLs. '
                 'Use goog.dom.safe.setAnchorHref instead.'

  # Types with .href properties that do not extend from Element.
  value: 'StyleSheet.prototype.href'
  value: 'CSSImportRule.prototype.href'

  # All other types extend from Element.
  value: 'Element.prototype.href'

  # Safe wrapper for this property.
  whitelist: 'target/dep/main/js/goog/dom/safe.js'
}

requirement: {
  type: BANNED_PROPERTY_WRITE
  error_message: 'Use of document.domain is not allowed since it relaxes the '
                 'the same origin protections of JavaScript and opens up the '
                 'attack surface for the domain.'

  value: 'Document.prototype.domain'
}


# Additions to the basic rules from the example conformance.proto that
# check that contract types are being used the right way.
requirement: {
  type: BANNED_NAME
  error_message: 'Unchecked conversions can violate safe type contracts.'
                 '  Use goog.html.safe* instead.'
  value: 'goog.html.uncheckedconversions'

  # self reference OK as whole was vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # unpack just does what should be done via proto unpack code
  # so this is legit when the server side packing code is valid.
  whitelist: 'src/main/js/com/example/demo/unpack.js'
  # use to create view-source URLS vetted by ISE.
  whitelist: 'target/dep/main/js/goog/debug/debug.js'
  # use to create safe HTML from const strings vetted by ISE.
  whitelist: 'target/dep/main/js/goog/dom/dom.js'
  # sanitizes vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/sanitizer/htmlsanitizer.js'
  whitelist: 'target/dep/main/js/goog/html/sanitizer/csssanitizer.js'
  # Uses to convert between safe strings and Soy sanitized content
  # vetted by ISE.
  whitelist: 'target/dep/main/js/goog/soy/data.js'
  # Render to safe contract type with runtime strict template type check
  # vetted by ISE.
  whitelist: 'target/dep/main/js/goog/soy/renderer.js'
  # Safe* <-> Safe*Proto conversions vetted by ISE.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # bidiSpanWrap workaround vetted by ISE.  TODO: double check this with gboyer
  whitelist: 'target/dep/main/js/soy/soyutils_usegoog.js'
}

requirement: {
  type: BANNED_NAME
  error_message: 'Legacy conversions require prior approval.'
                 '  Contact ISE if you are integrating code from a partner.'
  value: 'goog.html.legacyconversions'

  # Self reference allowed.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Use is safe because the template type and strictness are checked.
  # TODO: This should probably use uncheckedconversions.
  whitelist: 'target/dep/main/js/goog/soy/soy.js'
  # TODO: should we deprecate goog.style.{setStyles,installStyles}?
  whitelist: 'target/dep/main/js/goog/style/style.js'
}

# TODO: goog.string.Const

requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.createSafeHtmlSecurityPrivateDoNotAccessOrElse'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.createSafeScriptSecurityPrivateDoNotAccessOrElse'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.createSafeStyleSecurityPrivateDoNotAccessOrElse'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.createSafeUrlSecurityPrivateDoNotAccessOrElse'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.initSecurityPrivateDoNotAccessOrElse_'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.privateDoNotAccessOrElseSafeHtmlWrappedValue'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'

  # Should be handled by generated protobuf unwrap code but is not.
  whitelist: 'src/main/js/com/example/demo/unpack.js'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.privateDoNotAccessOrElseSafeHtmlWrappedValue_'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.privateDoNotAccessOrElseSafeScriptWrappedValue'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.privateDoNotAccessOrElseSafeScriptWrappedValue_'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.privateDoNotAccessOrElseSafeStyleSheetWrappedValue'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.privateDoNotAccessOrElseSafeStyleWrappedValue'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.privateDoNotAccessOrElseSafeStyleWrappedValue_'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.privateDoNotAccessOrElseSafeUrlWrappedValue'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.setPrivateDoNotAccessOrElseSafeHtmlWrappedValue'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.setPrivateDoNotAccessOrElseSafeScriptWrappedValue'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.setPrivateDoNotAccessOrElseSafeStyleSheetWrappedValue'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.setPrivateDoNotAccessOrElseSafeStyleWrappedValue'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.setPrivateDoNotAccessOrElseSafeUrlWrappedValue'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist_regexp: '^target/src/main/js/safe.*proto[.]js$'
}


requirement: {
  type: BANNED_PROPERTY,
  error_message: 'Do not manipulate safe contract types directly.'
                 '  Use goog.html.safe* instead'
  value: 'Object.prototype.setPrivateDoNotAccessOrElseTrustedResourceUrlWrappedValue'

  # Legacy conversions is needed, but the use of that namespace is banned.
  whitelist: 'target/dep/main/js/goog/html/legacyconversions.js'
  # Maintained & vetted by ISE.
  whitelist_regexp: '^target/dep/main/js/goog/html/safe.*[.]js$'
  whitelist: 'target/dep/main/js/goog/html/trustedresourceurl.js'
  whitelist: 'target/dep/main/js/goog/html/uncheckedconversions.js'
  # Vetted by ISE.
  whitelist: 'target/dep/main/js/goog/html/flash.js'
  whitelist: 'target/dep/main/js/goog/html/silverlight.js'
  # Only allowed in test code.
  whitelist: 'target/dep/main/js/goog/html/testing.js'
  whitelist: 'target/dep/main/js/goog/window/window.js'
  # Vetted by ISE.  Does proto <-> JS type conversions.
  whitelist: 'target/dep/main/js/soy/jspbconversions.js'
  # Generates Protobuf code for the safe contract types.
  whitelist: 'target/src/main/js/trustedresourceurlproto.js'
}
