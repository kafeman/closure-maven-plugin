<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.google.closure.it</groupId>
  <artifactId>demo</artifactId>
  <version>1.0-SNAPSHOT</version>

  <description>Whole Application Contract Types Demo</description>

  <!-- allow building to run as a demo without
       introducing a directory into plugin/src/it/demo
       which gets copied when running the plugin integration tests.

       The demo server can be kicked off via

       $ mvn -PalternateBuildDir -Dalt.build.dir=$TMP/demo-target verify \
         && java -jar $TMP/demo-target/demo-*.jar
  -->
  <profiles>
    <profile>
      <id>alternateBuildDir</id>
      <activation>
        <property>
          <name>alt.build.dir</name>
      </property>
      </activation>
      <build>
        <directory>${alt.build.dir}</directory>
      </build>
    </profile>
  </profiles>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.7</java.version>
  </properties>

  <build>
    <defaultGoal>verify</defaultGoal>

    <!-- Compiles the project's HTML, CSS, JS and protos -->
    <plugins>
      <plugin>
        <groupId>com.google.closure</groupId>
        <artifactId>closure-maven-plugin</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <configuration>
          <genJavaPackageName>com.example.demo</genJavaPackageName>
          <js>
            <compilationLevel>ADVANCED_OPTIMIZATIONS</compilationLevel>
            <!--jscompWarn>*</jscompWarn-->
            <jscompError>undefinedVars</jscompError>
            <jscompError>visibility</jscompError>
            <jscompError>nonStandardJsDocs</jscompError>
            <jscompError>invalidCasts</jscompError>
            <jscompWarning>checkTypes</jscompWarning>
            <jscompError>typeInvalidation</jscompError>
            <jscompError>checkVars</jscompError>
            <jscompError>deprecatedAnnotations</jscompError>
            <jscompError>missingProvide</jscompError>
            <jscompError>missingRequire</jscompError>
            <useNewTypeInference>true</useNewTypeInference>
          </js>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>generate-closure-sources</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Allows running the project via a Jetty web container -->
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.3.11.v20160721</version>
      </plugin>

      <!-- Compiles the Java -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>

      <!-- Assemble the project into an executable JAR -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.4.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer
                 implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.example.demo.Demo</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.3.1</version>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>extra-enforcer-rules</artifactId>
            <version>1.0-beta-4</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>enforce</id>
            <configuration>
              <rules>
                <DependencyConvergence/>
                <banDuplicateClasses>
                  <findAllDuplicates>true</findAllDuplicates>
                  <ignoreClasses>
                    <ignoreClass>javax.servlet.*</ignoreClass>
                  </ignoreClasses>
                </banDuplicateClasses>
              </rules>
              <fail>true</fail>
            </configuration>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>com.google.closure</groupId>
      <artifactId>soy-juice</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
    <!-- The protoc plugin needs protobuf-java so it can figure out which
         version of protoc to invoke. -->
    <dependency>
      <groupId>com.google.template</groupId>
      <artifactId>soy</artifactId>
      <version>2016-08-19</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.protobuf</groupId>
          <artifactId>protobuf-java</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>9.4.0.M1</version>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>3.0.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java-util</artifactId>
      <version>3.0.0</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.code.gson</groupId>
          <artifactId>gson</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>
    <!-- We test compiled JS by running it in Rhino -->
    <dependency>
      <groupId>org.mozilla</groupId>
      <artifactId>rhino</artifactId>
      <version>1.7.7.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
